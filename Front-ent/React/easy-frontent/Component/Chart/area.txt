import React, { Component } from 'react';
import Chart from "react-apexcharts";
import PropTypes from 'prop-types';
import i18next from 'i18next'

class CTLChartLineV2 extends Component {
    chartRef = React.createRef();

    constructor(props) {
      super(props);
  
      this.state = {
        options: {
          chart: {
            id: "basic-bar",
            sparkline: {
                enabled: true, // Đường path nằm ở dưới và nút download
            },
          },
          colors: ['#75bbfc'], // màu cho đường line
          fill: { // màu cho vùng background area
            type: "gradient",
            gradient: {
              shadeIntensity: 1,
              opacityFrom: 0.7,
              opacityTo: 0.9,
              colorStops: [
                {
                  offset: 0,
                  color: "#d5ebfe",
                  opacity: 1
                },
              ]
            }
          },
          grid: {
            show: false,
            xaxis: {
              lines: {
                show: false
              }
            },
            yaxis: {
              lines: {
                show: false
              }
            }
          },
          xaxis: {
            labels: {
              show: false
            }
          },
          stroke: {
            show: true,
            curve:'straight', // Đường line là đường thẳng
            width: 2 // Độ lớn đường line
          }
        },
        series: [
          {
            name: "series-1",
            data: []
          }
        ],

      };
    }

    componentWillReceiveProps(next_props) {
      
      var list_data = [];

      for ( var i = 0 ; i < next_props.data.length ; i++ ){
        var item_data = {}
        item_data['x'] = next_props.label[i],
        item_data['y'] = next_props.data[i]
        list_data.push(item_data)
      }

      this.setState({
        ...this.state,
        series: [
          {
            name: i18next.t(next_props.lb),
            data: list_data
          }
        ]
      });
    }


    render() {
        if (this.props.height){
          var {height} = this.props
        }else{
          height = 45
        }
        const {chart_id} = this.props;

        return (
            <>
              <Chart
                options={this.state.options}
                series={this.state.series}
                type="area"
                width="100%"
                height={height}
                className="d-inline-block"
              />
            </>
        )
    }
}

// CTLChartLineV2.propTypes = propTypes;
// CTLChartLineV2.defaultProps = defaultProps;

export default CTLChartLineV2;
